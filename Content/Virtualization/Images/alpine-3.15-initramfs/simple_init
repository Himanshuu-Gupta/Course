#!/bin/sh

chown -R root:root /root
echo "initramfs" > /etc/hostname

# System proc filesystem: interface for kernel, running processes, etc.
mount -t proc proc /proc -o nodev,nosuid,noexec,relatime
mount -t tmpfs tmpfs /run -o nodev,nosuid,noexec,relatime,size=10%,mode=755
mount -t tmpfs tmpfs /tmp -o nodev,nosuid,noexec,relatime,size=10%,mode=1777
mount -t tmpfs tmpfs /var -o nodev,nosuid,noexec,relatime,size=50%,mode=755

# Useful directories for storing many programs
mkdir -m 0755 /var/cache /var/empty /var/lib /var/local /var/lock /var/log /var/opt /var/spool
mkdir -m 01777 /var/tmp
mkdir -m 0755 /var/cache/apk
ln -s /run /var/run

# Mount character devices
mount -t devtmpfs dev /dev -o nosuid,noexec,relatime,size=10m,nr_inodes=248418,mode=755
#ifCONFIG_DEVTMPFS=y  CONFIG_DEVTMPFS_MOUNT=y
# then don't need to mount... manually
#mknod -m 0600 /dev/console c 5 1
#mknod -m 0620 /dev/tty1 c 4 1
#mknod -m 0666 /dev/tty 5 0
#mknod -m 0666 /dev/null 1 3
#mknod -m 0660 /dev/kmsg 1 11

#ln -s /proc/self/fd /dev/fd
#ln -s /proc/self/fd/0 /dev/stdin
#ln -s /proc/self/fd/1 /dev/stdout
#ln -s /proc/self/fd/2 /dev/stderr
#ln -s /proc/kcore /dev/kcore

# Speciality devices for tasks, temp space, and pseud-terminals
mkdir -m 01777 /dev/mqueue
mkdir -m 01777 /dev/shm
mkdir -m 0755 /dev/pts

mount -t mqueue mqueue /dev/mqueue -o noexec,nosuid,nodev
mount -t tmpfs shm /dev/shm -o noexec,nosuid,nodev,mode=1777
mount -t devpts devpts /dev/pts -o noexec,nosuid,gid=5,mode=0620

# kernel subsystems, devices, firmware
mount -t sysfs sysfs /sys -o noexec,nosuid,nodev

# hotplug kernel with firmware
echo "/sbin/mdev" > /proc/sys/kernel/hotplug
for x in $(ls /sys/bus/*/devices/*/modalias); do
    echo "Loading $x" > /dev/console
    /sbin/modprobe -abq $(cat "$x") || true;
done

# mount root, enabling it to shared across namespaces and replicated by other mounts.
mount --make-rshared /

# clock
/sbin/hwclock --hctosys --utc

# hostname
hostname $(cat /etc/hostname)

echo "Running /sbin/init\n\n" > /dev/console

exec /sbin/init